---
// ResourceLoader.astro - Carga selectiva de recursos CSS/JS
export interface Props {
  resources?: string[];
}

const { resources = [] } = Astro.props;

// Mapeo de recursos disponibles
const AVAILABLE_RESOURCES = {
  // Acordeones
  'acordeon-horizontal': {
    css: 'css/recursos/acordeon_horizontal/css/',
    js: 'css/recursos/acordeon_horizontal/js/',
    files: {
      css: ['estilos-acordeon-hor.css'],
      js: ['acordeon-hor.js']
    },
    init: `
      document.addEventListener('DOMContentLoaded', function() {
        acordeonHorizontal("acordeon-horizontal-1");
        acordeonHorizontal("acordeon-horizontal-2");
        acordeonHorizontal("acordeon-horizontal-3");
      });
    `
  },
  'acordeon-vertical': {
    css: 'css/recursos/acordeon_vertical_rc04/',
    js: 'js/recursos/',
    files: {
      css: ['all.css', 'estilos-acordeon-vertical.css'],
      js: ['acordeon-vertical.js']
    },
    init: `
      document.addEventListener('DOMContentLoaded', function() {
        acordeonVertical("acordeon-vert-1");
        acordeonVertical("acordeon-vert-2");
        acordeonVertical("acordeon-vert-3");
        acordeonVertical("acordeon-vert-4");
      });
    `
  },
  
  // Carruseles
  'carrusel': {
    css: 'css/recursos/carrusel/css/',
    js: 'css/recursos/carrusel/js/',
    files: {
      css: ['estilos-carrusel.css'],
      js: ['carrusel.js']
    },
    init: `
      document.addEventListener('DOMContentLoaded', function() {
        // Inicializar todos los carruseles encontrados
        const carousels = document.querySelectorAll('.carrusel');
        carousels.forEach((carousel, index) => {
          if (!carousel.id) {
            carousel.id = 'carrusel-' + (index + 1);
          }
          if (typeof iniciarCarrusel === 'function') {
            iniciarCarrusel(carousel.id);
          }
        });
      });
    `
  },
  
  // Ficheros
  'fichero-horizontal': {
    css: 'css/recursos/fichero_horizontal/css/',
    js: 'css/recursos/fichero_horizontal/js/',
    files: {
      css: ['estilos-fichero-hor.css'],
      js: ['fichero-hor.js']
    },
    init: `
      document.addEventListener('DOMContentLoaded', function() {
        ficheroHorizontal("fichero-hor-1");
        ficheroHorizontal("fichero-hor-2");
      });
    `
  },
  'fichero-vertical': {
    css: 'css/recursos/fichero_vertical_rc02/',
    js: 'js/recursos/',
    files: {
      css: ['all.css', 'estilos-fichero-vert.css'],
      js: ['fichero-vert.js']
    },
    init: `
      document.addEventListener('DOMContentLoaded', function() {
        ficheroVertical('fichero-vert-1');
        ficheroVertical('fichero-vert-2');
        ficheroVertical('fichero-vert-3');
      });
    `
  },
  
  // Contenidos
  'folder-contenidos': {
    css: 'css/recursos/folder_contenidos/css/',
    js: null,
    files: {
      css: ['estilos-folder.css'],
      js: []
    }
  },
  
  // Hojas
  'hoja-bloc': {
    css: 'css/recursos/hoja_bloc/css/',
    js: null,
    files: {
      css: ['estilos-hoja-bloc.css'],
      js: []
    }
  },
  'hoja-espiral': {
    css: 'css/recursos/hoja_espiral/css/',
    js: null,
    files: {
      css: ['estilos-hoja-espiral.css'],
      js: []
    }
  },
  'hojas-desordenadas': {
    css: 'css/recursos/hojas_desordenadas/css/',
    js: null,
    files: {
      css: ['estilos-hojas-desordenadas.css'],
      js: []
    }
  },
  
  // Hotspot
  'hotspot': {
    css: 'css/recursos/hotspot/css/',
    js: 'css/recursos/hotspot/js/',
    files: {
      css: ['estilos-hot-spot.css', 'bootstrap.min.css'],
      js: ['hotspot.js', 'bootstrap.bundle.min.js']
    },
    init: `
      document.addEventListener('DOMContentLoaded', function() {
        // Inicializar hotspots
        const hotspots = document.querySelectorAll('.hotspot-container');
        hotspots.forEach((hotspot, index) => {
          if (!hotspot.id) {
            hotspot.id = 'hotspot-' + (index + 1);
          }
          if (typeof initHotspot === 'function') {
            initHotspot(hotspot.id);
          }
        });
      });
    `
  },
  
  // Líneas de tiempo
  'linea-tiempo-horizontal': {
    css: 'css/recursos/linea_tiempo_horizontal/css/',
    js: 'css/recursos/linea_tiempo_horizontal/js/',
    files: {
      css: ['estilos-linea-tiempo-horizontal.css'],
      js: ['timeline.min.js', 'linea_tiempo_hor.js']
    },
    init: `
      document.addEventListener('DOMContentLoaded', function() {
        // Inicializar líneas de tiempo horizontales
        const timelines = document.querySelectorAll('.timeline-horizontal, .linea-tiempo-hor');
        timelines.forEach((timeline, index) => {
          if (!timeline.id) {
            timeline.id = 'timeline-hor-' + (index + 1);
          }
          if (typeof iniciarTimelineHorizontal === 'function') {
            iniciarTimelineHorizontal(timeline.id);
          }
        });
      });
    `
  },
  'linea-tiempo-vertical': {
    css: 'css/recursos/linea_tiempo_vertical/css/',
    js: 'css/recursos/linea_tiempo_vertical/js/',
    files: {
      css: ['estilos-linea-tiempo-vertical.css'],
      js: ['timeline.min.js', 'linea_tiempo_vertical.js']
    },
    init: `
      document.addEventListener('DOMContentLoaded', function() {
        // Inicializar líneas de tiempo verticales
        const timelines = document.querySelectorAll('.timeline-vertical, .linea-tiempo-vert');
        timelines.forEach((timeline, index) => {
          if (!timeline.id) {
            timeline.id = 'timeline-vert-' + (index + 1);
          }
          if (typeof iniciarTimelineVertical === 'function') {
            iniciarTimelineVertical(timeline.id);
          }
        });
      });
    `
  },
  
  // Listas
  'lista-desplegable': {
    css: 'css/recursos/lista_desplegable/css/',
    js: null,
    files: {
      css: ['estilos-lista_desplegable.css', 'listaAnimacion.css'],
      js: []
    }
  },
  
  // Notas
  'nota-cinta': {
    css: 'css/recursos/nota_cinta/css/',
    js: null,
    files: {
      css: ['estilos-nota-cinta.css'],
      js: []
    }
  },
  'nota-pin': {
    css: 'css/recursos/nota_pin/css/',
    js: null,
    files: {
      css: ['estilos-nota-pin.css'],
      js: []
    }
  },
  
  // Tarjetas
  'tarjeta-desplegable1': {
    css: 'css/recursos/tarjeta_desplegable1/css/',
    js: null,
    files: {
      css: ['all.css', 'fontawesome.min.css', 'font.css'],
      js: []
    }
  },
  'tarjeta-desplegable2': {
    css: 'css/recursos/tarjeta_desplegable2/css/',
    js: null,
    files: {
      css: ['estilos-tarjeta-desplegable2.css', 'all.css', 'fontawesome.min.css'],
      js: []
    }
  },
  'tarjeta-giratoria': {
    css: 'css/recursos/tarjeta_giratoria/css/',
    js: null,
    files: {
      css: ['estilos-tarjeta-giratoria.css', 'all.css', 'fontawesome.min.css'],
      js: []
    }
  },
  
  // Tríptico
  'triptico': {
    css: 'css/recursos/triptico/css/',
    js: 'css/recursos/triptico/js/',
    files: {
      css: ['estilos-triptico.css'],
      js: ['jquery-3.6.0.min.js', 'jquery-ui-1.13.0.min.js', 'jquery.ui.touch-punch.min.js', 'triptico.js']
    },
    init: `
      document.addEventListener('DOMContentLoaded', function() {
        // Tríptico requiere jQuery
        if (typeof $ !== 'undefined') {
          const tripticos = document.querySelectorAll('.triptico');
          tripticos.forEach((triptico, index) => {
            if (!triptico.id) {
              triptico.id = 'triptico-' + (index + 1);
            }
            if (typeof iniciarTriptico === 'function') {
              iniciarTriptico(triptico.id);
            }
          });
        } else {
          console.warn('jQuery no está disponible para inicializar el tríptico');
        }
      });
    `
  }
} as const;

// Filtrar recursos solicitados
const requestedResources = resources.filter(resource => AVAILABLE_RESOURCES[resource as keyof typeof AVAILABLE_RESOURCES]);
---

<!-- Cargar CSS de recursos solicitados -->
{requestedResources.map(resource => {
  const resourceConfig = AVAILABLE_RESOURCES[resource as keyof typeof AVAILABLE_RESOURCES];
  return resourceConfig.files.css.map(cssFile => (
    <link rel="stylesheet" href={`${resourceConfig.css}${cssFile}`} />
  ));
})}

<!-- Cargar JS de recursos solicitados -->
{requestedResources.map(resource => {
  const resourceConfig = AVAILABLE_RESOURCES[resource as keyof typeof AVAILABLE_RESOURCES];
  // Solo cargar JS si el recurso tiene archivos JS y ruta válida
  if (resourceConfig.js && resourceConfig.files.js.length > 0) {
    return resourceConfig.files.js.map(jsFile => (
      <script src={`${resourceConfig.js}${jsFile}`} is:inline></script>
    ));
  }
  return [];
})}

<!-- Scripts de inicialización -->
{requestedResources.map(resource => {
  const resourceConfig = AVAILABLE_RESOURCES[resource as keyof typeof AVAILABLE_RESOURCES];
  if ('init' in resourceConfig && resourceConfig.init) {
    return (
      <script is:inline set:html={resourceConfig.init}></script>
    );
  }
  return null;
})}

<!-- Logs para desarrollo -->
<script is:inline define:vars={{ requestedResources }}>
  if (requestedResources.length > 0) {
    console.log('Recursos cargados:', requestedResources);
  }
</script>